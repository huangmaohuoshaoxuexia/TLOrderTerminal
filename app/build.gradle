apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'orderterminal'
            keyPassword '123456'
            storeFile file('../tl_order_terminal_key.jks')
            storePassword '123456'
        }
    }
    def API_LOCAL_HOST = '"http://api.local.tianlu56.com.cn/"' //本地环境
    def API_DEV_HOST = '"http://api.dev.tianlu56.com.cn/"' //开发环境
    def API_FAT_HOST = '"http://api.fat.tianlu56.com.cn/"' //测试环境
    def API_UAT_HOST = '"https://wmsapi.tianlu56.com.cn/"' //线上环境

    compileSdkVersion 26
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "tl.com.tlsl"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        manifestPlaceholders = [
                GETUI_APP_ID    : "3J5FLCYcDZ9KkqcjybQHL6",
                GETUI_APP_KEY   : "swnNE3Ilg48ovp89V5vxr",
                GETUI_APP_SECRET: "74cS4ttXN69oONDUbzVXA3"
        ]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64"
        }
    }
    buildTypes {
        release {
            // 是否进行混淆
            minifyEnabled false
            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_HOST', "${API_DEV_HOST}"//API HostLOCAL
        }
        debug {
            minifyEnabled false
            buildConfigField 'String', 'API_HOST', "${API_DEV_HOST}"//API Host
        }
        dev {
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_HOST', "${API_DEV_HOST}"//API Host
        }
        fat {
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_HOST', "${API_FAT_HOST}"//API Host
        }
        uat {
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_HOST', "${API_UAT_HOST}"//API Host
        }
        local {
            signingConfig signingConfigs.config
            buildConfigField 'String', 'API_HOST', "${API_LOCAL_HOST}"//API Host
        }
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.0.0-alpha1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:recyclerview-v7:26.0.0-alpha1'
    implementation 'com.contrarywind:Android-PickerView:3.2.6'
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    //Retrofit2所需要的包
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    //ConverterFactory的Gson依赖包
    implementation 'com.squareup.retrofit2:converter-scalars:2.0.0-beta4'
    //ConverterFactory的String依赖包
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'com.squareup.okhttp3:okhttp:3.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    implementation 'com.alibaba:fastjson:1.2.39'
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.getui:sdk:2.11.1.0'

    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'
    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'
}
